#!/usr/bin/env python3

import socket
import configparser
from flask import Flask, render_template, request, jsonify
import mysql.connector

config = configparser.ConfigParser()
config.read("config_server.ini")
localhost = config["wishlist_conf"]["localhost"]
local_sql_username = config["wishlist_conf"]["local_sql_username"]
local_sql_password = config["wishlist_conf"]["local_sql_password"]
db_name = config["wishlist_conf"]["db_name"]



def read_sql(wish_type):
    db = mysql.connector.connect(host=localhost, port=3306, user=local_sql_username, password=local_sql_password, database=db_name) 
    cursor = db.cursor()
    cursor.execute("SELECT cover, title, author, description, link, ean, rate, notes FROM my_wishlist WHERE type=%s;", (wish_type,))
    result = cursor.fetchall()
    return result


def get_ip():
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    try:
        s.connect(("208.67.222.222", 80))  # Try to connect any site (here OpenDNS server), to check used ip address
    except:
        ip_address = "127.0.0.1"
        s.close()
        return ip_address
    ip_address = s.getsockname()[0]
    s.close()
    return ip_address


app = Flask(__name__)

@app.route("/")
@app.route("/ksiazki")
@app.route("/komiksy")
@app.route("/gry")
@app.route("/filmy")
@app.route("/seriale")
@app.route("/planszowki")
def ksiazki():
    if request.path == "/komiksy":
        results = read_sql("komiks")
    elif request.path == "/ksiazki":
        results = read_sql("książka")
    elif request.path == "/gry":
        results = read_sql("gra komputerowa")
    elif request.path == "/filmy":
        results = read_sql("film")
    elif request.path == "/seriale":
        results = read_sql("serial")
    elif request.path == "/planszowki":
        results = read_sql("gra planszowa")
    else:
        return render_template("dodaj.html")
    return render_template("dodaj.html", results = results)


@app.route("/api", methods=["GET"])
def api_book():
    author = request.args.get("author")
    rate = request.args.get("rate")
    tag = request.args.get("tag")
    category = request.args.get("category")

    query = "SELECT title, author, link, rate, notes FROM my_wishlist WHERE 1=1"
    args = []
    if author:
        query += " AND author LIKE CONCAT ('%',%s,'%')"
        args.append(author)
    if rate:
        query += " AND rate >= %s"
        args.append(float(rate))
    if tag:
        query += " AND (description LIKE CONCAT ('%',%s,'%') OR notes LIKE CONCAT ('%',%s,'%'))"
        args.append(tag)
        args.append(tag)
    if category:
        query += " AND type=%s"
        args.append(category)
    db = mysql.connector.connect(host=localhost, port=3306, user=local_sql_username, password=local_sql_password, database=db_name) 
    cursor = db.cursor(dictionary=True)
    cursor.execute(query, args)
    book = cursor.fetchall()
    db.close()
    if book:
        return jsonify([dict(row) for row in book])
    return "W bazie danych nie ma wyszukiwanej pozycji"


host_ip = get_ip()

if __name__ == "__main__":
    app.run(debug=True, host=host_ip, port=5050)
